{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","apiurl","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEPC,mBAAS,IAFF,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC+EC,UAAUH,GADzF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAUEA,EAAKC,OAVP,uBAUZC,EAVY,EAUZA,KAEDC,EAAOD,EAAKE,KAAK,SAACC,GACpB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVC,IAAIH,EAAII,OAAOC,iBAAiBF,QAhBrB,kBAqBZL,GArBY,4CAAH,sDCAXQ,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,IAAa,EAARF,GACrC,OACI,sBAAKM,UAAU,uCAAf,UACI,qBACIC,IAAKL,EACLM,IAAKP,IAET,4BAAIA,QCLHQ,EAAU,SAAC,GAAsB,IAAD,IAApBpB,gBAAoB,MAAX,MAAW,ICAjB,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLc,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNzB,EAAQC,GACPyB,MAAM,SAACC,GACJH,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,SAGjB,CAACrB,IAEGsB,EDdwBK,CAAa3B,GAAhCc,EAF6B,EAElCP,KAAac,EAFqB,EAErBA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAElDqB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOL,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEgBlBiB,EA7BO,WAAM,MAEU1C,mBAAS,CAAC,QAFpB,mBAEnB2C,EAFmB,KAEP5C,EAFO,KAU1B,OACE,qCACE,+CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEI4C,EAAWpB,KAAK,SAACT,EAAU8B,GAAX,OACd,cAAC,EAAD,CACE9B,SAAUA,GACL8B,YCpBnBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a07e651e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] =  useState('');\n\n    const handleInputChange = (e) =>{\n        //setInputValue( cate => [...cate, 'four'] );\n        setInputValue(e.target.value);\n        //console.log(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cate => [inputValue, ...cate]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n    export const getGifs = async(category) => {\n        const apiurl = `https://api.giphy.com/v1/gifs/search?api_key=H5O38Mdxh45OHpCmVmhbbKiqfNpnTuBV&q=${encodeURI(category)}&limit=10`;\n        const resp = await fetch(apiurl);\n\n        /*\n        const {\n            data:{id, title}, images:{downsized_medium:{url}}\n        } = await resp.json();\n        console.log(id, title, url);\n        */\n        const {data} = await resp.json();\n\n        const gifs = data.map( (img) => {\n            return {\n                id:img.id,\n                title:img.title,\n                url:img.images.downsized_medium.url\n            }\n        });\n        //console.log(gifs);\n        //setImages(gifs);\n        return gifs;\n    }","import React from 'react'\n\nexport const GifGridItem = ({title, url, id}) => {\n    return (\n        <div className=\"card animate__animated animate__tada\">\n            <img\n                src={url} \n                alt={title}\n            />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category='dog'}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n        {loading && <p className=\"animate__animated animate__flash\">loading</p>}\n\n        <div className=\"card-grid\">\n            {\n                images.map( img => (\n                    <GifGridItem \n                        key={img.id}\n                        {...img}\n                    />\n                ))\n            }\n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n        .then( (imgs) => {\n            setState({\n                data:imgs,\n                loading:false\n            });\n        });\n    }, [category]);\n    \n    return state;\n}","\nimport React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst  GifExpertApp = () => {\n  //const categories = ['one', 'two', 'tree'];\n  const [categories, setCategories] = useState(['cat']);\n\n  /*\n  const handleAdd = () => {\n    //setCategories( [...categories, 'four'] );\n    setCategories( cate => [...cate, 'four'] );\n  }\n*/\n  return (\n    <>\n      <h2>GiftExpertApp</h2>\n      <hr/>\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {\n          categories.map( (category, i) => (\n            <GifGrid \n              category={category}\n              key={i}\n            />\n          ))\n        }\n      </ol>\n    </>\n  );\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}